apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

if (getPlugins().hasPlugin('application') && (mainClassName == null)) {
    mainClassName = [group, name, 'Main'].join('.')
}

ext.sharedManifest = manifest {
    attributes \
        'Implementation-Title':   project.name,
        'Implementation-Version': project.version,
        'Built-JDK':  System.getProperty('java.version'),
        'Built-By':   System.getProperty('user.name'),
        'Built-Date': new Date()

    if (project.hasProperty('mainClassName'))
        attributes 'Main-Class': project.mainClassName
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task fatJar(type: Jar) {
    description = 'Creates a jar containing all compile and transitive runtime dependencies.'
    classifier = 'fat'
    manifest = project.manifest { from sharedManifest }
    from sourceSets.main.output
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

jar {
    manifest = project.manifest { from sharedManifest }
}
