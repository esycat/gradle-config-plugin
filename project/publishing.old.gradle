import org.ajoberstar.gradle.git.tasks.*

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.ajoberstar', name: 'gradle-git', version: project.ext.get('plugin.git.version')
    }
}

apply plugin: 'maven'
apply plugin: 'signing'

artifacts {
    archives sourceJar, groovydocJar
}

signing {
    sign configurations.archives
    required { !isSnapshot && gradle.taskGraph.hasTask("uploadArchives") }
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: project.ext.get('sonatype.url')) {
            authentication(
                userName: System.properties['sonatype.username'],
                password: System.properties['sonatype.password']
            )
        }
        pom.project getPomConfiguration()
        beforeDeployment { signing.signPom it }
    }
}

install.repositories.mavenInstaller {
    pom.project getPomConfiguration()
}

task pom << {
    pom {
        project getPomConfiguration()
    }.writeTo(mavenPomDir.toString() + '/pom.xml')
}

task tagVersion(type: GitTag) {
    tagName = version
    message = "Release of v${version}."
    // sign = true // JGit doesn't support signing yet
    doLast {
        println sprintf('A new version %s has been tagged.', tagName)
    }
}

/**
 * This task is just for convenience, to emulate the future `maven-publish` plugin behavior.
 */
task publish {
    dependsOn uploadArchives
}

/**
 * This task is just for convenience, to emulate the future `maven-publish` plugin behavior.
 */
task release {
    dependsOn tagVersion, publish
}

/**
 * Create POM config and return for use by other tasks.
 */
def getPomConfiguration() {
    return {
        name project.name
        description project.description
        url 'https://github.com/esycat/gradle-props-util'
        inceptionYear '2013'
        packaging 'jar'
        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://apache.org/licenses/LICENSE-2.0'
                distribution 'repo'
            }
        }
        developers {
            developer {
                id 'esycat'
                name 'Eugene Janusov'
                email 'esycat@gmail.com'
            }
        }
        organization {
            name 'Persic Entertainment'
        }
        scm {
            url 'https://github.com/esycat/gradle-props-util'
            connection 'scm:git:git@github.com:esycat/gradle-props-util.git'
            developerConnection 'scm:git:git@github.com:esycat/gradle-props-util.git'
        }
    }
}
